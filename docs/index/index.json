{"includedArchiveIdentifiers":["com.expofp.sdk"],"interfaceLanguages":{"swift":[{"children":[{"title":"Load a plan","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplan\/createplanpresenter(with:additionalparams:locationprovider:messagelistener:)","title":"static func createPlanPresenter(with: ExpoFpLinkType, additionalParams: [URLQueryItem], locationProvider: IExpoFpLocationProvider?, messageListener: IExpoFpPlanMessageListener?) -> any IExpoFpPlanPresenter","type":"method"},{"title":"Download a plan for later use","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplandownloader\/downloadplan(withexpokey:)","title":"func downloadPlan(withExpoKey: String) async -> ExpoFpDownloadedPlanInfoResult","type":"method"},{"path":"\/documentation\/expofp\/expofpplandownloader\/downloadplan(withexpokey:completion:)","title":"func downloadPlan(withExpoKey: String, completion: (ExpoFpDownloadedPlanInfoResult) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/expofpplandownloader\/downloadplan(withzipfilepath:)","title":"func downloadPlan(withZipFilePath: String) async -> ExpoFpDownloadedPlanInfoResult","type":"method"},{"path":"\/documentation\/expofp\/expofpplandownloader\/downloadplan(withzipfilepath:completion:)","title":"func downloadPlan(withZipFilePath: String, completion: (ExpoFpDownloadedPlanInfoResult) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/expofpplandownloader\/getdownloadedplansinfo(withexpokey:)","title":"func getDownloadedPlansInfo(withExpoKey: String?) async -> [ExpoFpDownloadedPlanInfo]","type":"method"},{"path":"\/documentation\/expofp\/expofpplandownloader\/getdownloadedplansinfo(withexpokey:completion:)","title":"func getDownloadedPlansInfo(withExpoKey: String?, completion: ([ExpoFpDownloadedPlanInfo]) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/expofpplandownloader\/removealldownloadedplans()","title":"func removeAllDownloadedPlans() async","type":"method"},{"path":"\/documentation\/expofp\/expofpplandownloader\/removedownloadedplan(with:)","title":"func removeDownloadedPlan(with: ExpoFpDownloadedPlanInfo) async","type":"method"},{"path":"\/documentation\/expofp\/expofpplandownloader\/removeoldversionsofdownloadedplans(withexpokey:)","title":"func removeOldVersionsOfDownloadedPlans(withExpoKey: String?) async","type":"method"}],"path":"\/documentation\/expofp\/expofpplandownloader","title":"ExpoFpPlanDownloader","type":"struct"},{"title":"Preload a plan for later use","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplanpreloader\/disposepreloadedplan(with:)","title":"func disposePreloadedPlan(with: ExpoFpPreloadedPlanInfo?) -> (any IExpoFpPlanPresenter)?","type":"method"},{"path":"\/documentation\/expofp\/expofpplanpreloader\/getpreloadedplanpresenter(with:)","title":"func getPreloadedPlanPresenter(with: ExpoFpPreloadedPlanInfo?) -> (any IExpoFpPlanPresenter)?","type":"method"},{"path":"\/documentation\/expofp\/expofpplanpreloader\/getpreloadedplansinfo()","title":"func getPreloadedPlansInfo() -> [ExpoFpPreloadedPlanInfo]","type":"method"},{"path":"\/documentation\/expofp\/expofpplanpreloader\/preloadplan(with:additionalparams:locationprovider:messagelistener:)","title":"func preloadPlan(with: ExpoFpLinkType, additionalParams: [URLQueryItem], locationProvider: IExpoFpLocationProvider?, messageListener: IExpoFpPlanMessageListener?) -> ExpoFpPreloadedPlanInfo","type":"method"},{"path":"\/documentation\/expofp\/expofpplanpreloader\/removeallpreloadedplans()","title":"func removeAllPreloadedPlans()","type":"method"}],"path":"\/documentation\/expofp\/expofpplanpreloader","title":"ExpoFpPlanPreloader","type":"struct"},{"title":"Manage a plan","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/additionalparams","title":"var additionalParams: [URLQueryItem]","type":"property"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/locationprovider","title":"var locationProvider: IExpoFpLocationProvider?","type":"property"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/planlink","title":"var planLink: ExpoFpLinkType","type":"property"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/planstatuspublisher","title":"var planStatusPublisher: ExpoFpPlanStatusPublisher","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/applynewadditionalparams(_:)","title":"func applyNewAdditionalParams([URLQueryItem])","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/boothslist()","title":"func boothsList() async -> ExpoFpResult<[ExpoFpBooth]>","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/boothslist(completion:)","title":"func boothsList(completion: @MainActor (ExpoFpResult<[ExpoFpBooth]>) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/categorieslist()","title":"func categoriesList() async -> ExpoFpResult<[ExpoFpCategory]>","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/categorieslist(completion:)","title":"func categoriesList(completion: @MainActor (ExpoFpResult<[ExpoFpCategory]>) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/exhibitorslist()","title":"func exhibitorsList() async -> ExpoFpResult<[ExpoFpExhibitor]>","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/exhibitorslist(completion:)","title":"func exhibitorsList(completion: @MainActor (ExpoFpResult<[ExpoFpExhibitor]>) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/findlocation()","title":"func findLocation()","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/fitbounds()","title":"func fitBounds()","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/getelementsvisibility()","title":"func getElementsVisibility() async -> ExpoFpResult<ExpoFpElementsVisibility>","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/getelementsvisibility(completion:)","title":"func getElementsVisibility(completion: @MainActor (ExpoFpResult<ExpoFpElementsVisibility>) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/getoptimizedroutes(waypoints:)","title":"func getOptimizedRoutes(waypoints: [ExpoFpRouteWaypoint]) async -> ExpoFpResult<[ExpoFpRouteInfo]>","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/getoptimizedroutes(waypoints:completion:)","title":"func getOptimizedRoutes(waypoints: [ExpoFpRouteWaypoint], completion: @MainActor (ExpoFpResult<[ExpoFpRouteInfo]>) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/getview()","title":"func getView() -> AnyView","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/getviewcontroller()","title":"func getViewController() -> UIViewController","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/highlightbooths(externalids:)","title":"func highlightBooths(externalIds: [String])","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/highlightexhibitors(externalids:)","title":"func highlightExhibitors(externalIds: [String])","type":"method"},{"children":[{"children":[{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/reloadplan(planlink:additionalparams:locationprovider:messagelistener:)-8cru8","title":"func reloadPlan(planLink: ExpoFpLinkType?, additionalParams: [URLQueryItem]?, locationProvider: IExpoFpLocationProvider?, messageListener: IExpoFpPlanMessageListener?)","type":"method"}],"title":"IExpoFpPlanPresenter Implementations","type":"groupMarker"}],"path":"\/documentation\/expofp\/iexpofpplanpresenter\/reloadplan(planlink:additionalparams:locationprovider:messagelistener:)","title":"func reloadPlan(planLink: ExpoFpLinkType?, additionalParams: [URLQueryItem]?, locationProvider: IExpoFpLocationProvider?, messageListener: IExpoFpPlanMessageListener?)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/removeadditionalparams(forkeys:)","title":"func removeAdditionalParams(forKeys: [String])","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/removelocationprovider()","title":"func removeLocationProvider()","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/removemessagelistener()","title":"func removeMessageListener()","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/search(text:)","title":"func search(text: String) async -> ExpoFpResult<[ExpoFpSearchModel]>","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/search(text:completion:)","title":"func search(text: String, completion: @MainActor (ExpoFpResult<[ExpoFpSearchModel]>) -> Void)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/selectbooth(nameorexternalid:)","title":"func selectBooth(nameOrExternalId: String)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/selectcategory(name:)","title":"func selectCategory(name: String?)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/selectcurrentposition(_:focus:)","title":"func selectCurrentPosition(ExpoFpPosition?, focus: Bool)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/selectexhibitor(nameorexternalid:)","title":"func selectExhibitor(nameOrExternalId: String)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/selectroute(waypoints:onlyaccessible:)","title":"func selectRoute(waypoints: [ExpoFpRouteWaypoint], onlyAccessible: Bool)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/setbookmarks(_:)","title":"func setBookmarks([ExpoFpBookmark])","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/setelementsvisibility(_:)","title":"func setElementsVisibility(ExpoFpElementsVisibility)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/setlocationprovider(_:)","title":"func setLocationProvider(IExpoFpLocationProvider)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/setmessagelistener(_:)","title":"func setMessageListener(IExpoFpPlanMessageListener)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/switchview()","title":"func switchView()","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/updatelayervisibility(layer:isvisible:)","title":"func updateLayerVisibility(layer: String, isVisible: Bool)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/zoomin()","title":"func zoomIn()","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanpresenter\/zoomout()","title":"func zoomOut()","type":"method"}],"path":"\/documentation\/expofp\/iexpofpplanpresenter","title":"IExpoFpPlanPresenter","type":"protocol"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpgloballocationprovider\/expofplocationproviderdelegate","title":"var expoFpLocationProviderDelegate: ExpoFpLocationProviderDelegate?","type":"property"},{"path":"\/documentation\/expofp\/expofpgloballocationprovider\/sharedprovider","title":"var sharedProvider: IExpoFpLocationProvider?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpgloballocationprovider\/startupdatinglocation()","title":"func startUpdatingLocation() async throws","type":"method"},{"path":"\/documentation\/expofp\/expofpgloballocationprovider\/stopupdatinglocation()","title":"func stopUpdatingLocation()","type":"method"}],"path":"\/documentation\/expofp\/expofpgloballocationprovider","title":"ExpoFpGlobalLocationProvider","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofplocationproviderdelegate\/positiondidchange(_:)","title":"func positionDidChange(ExpoFpPosition)","type":"method"}],"path":"\/documentation\/expofp\/expofplocationproviderdelegate","title":"ExpoFpLocationProviderDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/iexpofplocationprovider\/expofplocationproviderdelegate","title":"var expoFpLocationProviderDelegate: ExpoFpLocationProviderDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/iexpofplocationprovider\/startupdatinglocation()","title":"func startUpdatingLocation() async throws","type":"method"},{"path":"\/documentation\/expofp\/iexpofplocationprovider\/stopupdatinglocation()","title":"func stopUpdatingLocation()","type":"method"}],"path":"\/documentation\/expofp\/iexpofplocationprovider","title":"IExpoFpLocationProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/iexpofpplanmessagelistener\/bookmarkdidclick(_:from:)","title":"func bookmarkDidClick(ExpoFpResult<ExpoFpBookmark>, from: ExpoFpLinkType)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanmessagelistener\/boothdidclick(_:from:)","title":"func boothDidClick(ExpoFpResult<ExpoFpBoothClickEvent>, from: ExpoFpLinkType)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanmessagelistener\/categorydidclick(_:from:)","title":"func categoryDidClick(ExpoFpResult<ExpoFpCategory>, from: ExpoFpLinkType)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanmessagelistener\/currentpositiondidchange(_:from:)","title":"func currentPositionDidChange(ExpoFpResult<ExpoFpPosition>, from: ExpoFpLinkType)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanmessagelistener\/detailsdidclick(_:from:)","title":"func detailsDidClick(ExpoFpResult<ExpoFpDetails?>, from: ExpoFpLinkType)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanmessagelistener\/directiondidbuild(_:from:)","title":"func directionDidBuild(ExpoFpResult<ExpoFpDirection?>, from: ExpoFpLinkType)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanmessagelistener\/exhibitorcustombuttondidclick(_:from:)","title":"func exhibitorCustomButtonDidClick(ExpoFpResult<ExpoFpCustomButtonEvent>, from: ExpoFpLinkType)","type":"method"},{"path":"\/documentation\/expofp\/iexpofpplanmessagelistener\/visiteddidclick(_:from:)","title":"func visitedDidClick(ExpoFpResult<ExpoFpVisitedClickEvent>, from: ExpoFpLinkType)","type":"method"}],"path":"\/documentation\/expofp\/iexpofpplanmessagelistener","title":"IExpoFpPlanMessageListener","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpbookmark\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpbookmark\/bookmarked","title":"let bookmarked: Bool","type":"property"},{"path":"\/documentation\/expofp\/expofpbookmark\/externalid","title":"let externalId: String","type":"property"},{"path":"\/documentation\/expofp\/expofpbookmark\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpbookmark\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpbookmark\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpbookmark","title":"ExpoFpBookmark","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpbooth\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpbooth\/exhibitors","title":"let exhibitors: [Int]","type":"property"},{"path":"\/documentation\/expofp\/expofpbooth\/externalid","title":"let externalId: String","type":"property"},{"path":"\/documentation\/expofp\/expofpbooth\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/expofp\/expofpbooth\/isspecial","title":"let isSpecial: Bool","type":"property"},{"path":"\/documentation\/expofp\/expofpbooth\/layer","title":"let layer: ExpoFpLayer","type":"property"},{"path":"\/documentation\/expofp\/expofpbooth\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpbooth\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpbooth\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpbooth","title":"ExpoFpBooth","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpboothclickevent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpboothclickevent\/target","title":"let target: ExpoFpBooth?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpboothclickevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpboothclickevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpboothclickevent","title":"ExpoFpBoothClickEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpcategory\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpcategory\/exhibitors","title":"let exhibitors: [Int]","type":"property"},{"path":"\/documentation\/expofp\/expofpcategory\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/expofp\/expofpcategory\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpcategory\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpcategory\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpcategory","title":"ExpoFpCategory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpcustombuttonevent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpcustombuttonevent\/buttonnumber","title":"let buttonNumber: Int","type":"property"},{"path":"\/documentation\/expofp\/expofpcustombuttonevent\/buttonurl","title":"let buttonUrl: URL","type":"property"},{"path":"\/documentation\/expofp\/expofpcustombuttonevent\/externalid","title":"let externalId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpcustombuttonevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpcustombuttonevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpcustombuttonevent","title":"ExpoFpCustomButtonEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetails\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetails\/boothsnames","title":"let boothsNames: [String]","type":"property"},{"path":"\/documentation\/expofp\/expofpdetails\/externalid","title":"let externalId: String","type":"property"},{"path":"\/documentation\/expofp\/expofpdetails\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/expofp\/expofpdetails\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/expofp\/expofpdetails\/type","title":"let type: ExpoFpDetailsType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpdetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpdetails","title":"ExpoFpDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdirection\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdirection\/distance","title":"let distance: String","type":"property"},{"path":"\/documentation\/expofp\/expofpdirection\/duration","title":"let duration: TimeInterval","type":"property"},{"path":"\/documentation\/expofp\/expofpdirection\/from","title":"let from: ExpoFpBooth?","type":"property"},{"path":"\/documentation\/expofp\/expofpdirection\/lines","title":"let lines: [ExpoFpLine]","type":"property"},{"path":"\/documentation\/expofp\/expofpdirection\/to","title":"let to: ExpoFpBooth?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpdirection","title":"ExpoFpDirection","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/_(_:_:)","title":"static func < (ExpoFpDownloadedPlanInfo, ExpoFpDownloadedPlanInfo) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/expokey","title":"let expoKey: String","type":"property"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/version","title":"let version: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/'...(_:)-7aau","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/'...(_:)-tro5","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/_(_:_:)-7eta3","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/_=(_:_:)-1b79q","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/_=(_:_:)-1een3","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpdownloadedplaninfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpdownloadedplaninfo","title":"ExpoFpDownloadedPlanInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpelementsvisibility\/init(controls:levels:header:overlay:)","title":"init(controls: Bool, levels: Bool, header: Bool, overlay: Bool)","type":"init"},{"path":"\/documentation\/expofp\/expofpelementsvisibility\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpelementsvisibility\/controls","title":"let controls: Bool","type":"property"},{"path":"\/documentation\/expofp\/expofpelementsvisibility\/header","title":"let header: Bool","type":"property"},{"path":"\/documentation\/expofp\/expofpelementsvisibility\/levels","title":"let levels: Bool","type":"property"},{"path":"\/documentation\/expofp\/expofpelementsvisibility\/overlay","title":"let overlay: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpelementsvisibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpelementsvisibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpelementsvisibility","title":"ExpoFpElementsVisibility","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpexhibitor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpexhibitor\/booths","title":"let booths: [Int]","type":"property"},{"path":"\/documentation\/expofp\/expofpexhibitor\/externalid","title":"let externalId: String","type":"property"},{"path":"\/documentation\/expofp\/expofpexhibitor\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/expofp\/expofpexhibitor\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpexhibitor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpexhibitor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpexhibitor","title":"ExpoFpExhibitor","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofplayer\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/expofp\/expofplayer\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofplayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/expofp\/expofplayer\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofplayer","title":"ExpoFpLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpline\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpline\/endpoint","title":"let endPoint: ExpoFpPoint","type":"property"},{"path":"\/documentation\/expofp\/expofpline\/startpoint","title":"let startPoint: ExpoFpPoint","type":"property"},{"path":"\/documentation\/expofp\/expofpline\/weight","title":"let weight: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpline\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpline\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpline","title":"ExpoFpLine","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofppoint\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/expofp\/expofppoint\/init(x:y:layer:)","title":"init(x: Double, y: Double, layer: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofppoint\/layer","title":"let layer: String?","type":"property"},{"path":"\/documentation\/expofp\/expofppoint\/x","title":"let x: Double","type":"property"},{"path":"\/documentation\/expofp\/expofppoint\/y","title":"let y: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofppoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofppoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofppoint","title":"ExpoFpPoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpposition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/expofp\/expofpposition\/init(x:y:z:angle:lat:lng:)","title":"init(x: Double?, y: Double?, z: ExpoFpFloor?, angle: Double?, lat: Double?, lng: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpposition\/angle","title":"let angle: Double?","type":"property"},{"path":"\/documentation\/expofp\/expofpposition\/lat","title":"let lat: Double?","type":"property"},{"path":"\/documentation\/expofp\/expofpposition\/lng","title":"let lng: Double?","type":"property"},{"path":"\/documentation\/expofp\/expofpposition\/x","title":"let x: Double?","type":"property"},{"path":"\/documentation\/expofp\/expofpposition\/y","title":"let y: Double?","type":"property"},{"path":"\/documentation\/expofp\/expofpposition\/z","title":"let z: ExpoFpFloor?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpposition","title":"ExpoFpPosition","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofppreloadedplaninfo\/==(_:_:)","title":"static func == (ExpoFpPreloadedPlanInfo, ExpoFpPreloadedPlanInfo) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofppreloadedplaninfo\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/expofp\/expofppreloadedplaninfo\/planlink","title":"let planLink: ExpoFpLinkType","type":"property"},{"path":"\/documentation\/expofp\/expofppreloadedplaninfo\/planstatuspublisher","title":"var planStatusPublisher: ExpoFpPlanStatusPublisher","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofppreloadedplaninfo\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofppreloadedplaninfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofppreloadedplaninfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofppreloadedplaninfo","title":"ExpoFpPreloadedPlanInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofprouteinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofprouteinfo\/waypoints","title":"let waypoints: [ExpoFpRouteWaypoint]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofprouteinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofprouteinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofprouteinfo","title":"ExpoFpRouteInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpschedule\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpschedule\/boothid","title":"let boothId: Int","type":"property"},{"path":"\/documentation\/expofp\/expofpschedule\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/expofp\/expofpschedule\/enddate","title":"let endDate: String","type":"property"},{"path":"\/documentation\/expofp\/expofpschedule\/exhibitorid","title":"let exhibitorId: Int?","type":"property"},{"path":"\/documentation\/expofp\/expofpschedule\/externalid","title":"let externalId: String","type":"property"},{"path":"\/documentation\/expofp\/expofpschedule\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/expofp\/expofpschedule\/link","title":"let link: URL?","type":"property"},{"path":"\/documentation\/expofp\/expofpschedule\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/expofp\/expofpschedule\/startdate","title":"let startDate: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpschedule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpschedule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpschedule","title":"ExpoFpSchedule","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/_(_:_:)","title":"static func < (ExpoFpSearchModel, ExpoFpSearchModel) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/externalid","title":"var externalId: String?","type":"property"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/item","title":"let item: ExpoFpSearchItemType","type":"property"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/rawtype","title":"var rawType: ExpoFpSearchItemType.RawType","type":"property"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/score","title":"let score: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/'...(_:)-45j7r","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/'...(_:)-4ogkz","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/_(_:_:)-46nvz","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/_=(_:_:)-8ubep","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/_=(_:_:)-9sszd","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpsearchmodel\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpsearchmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpsearchmodel","title":"ExpoFpSearchModel","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/entity-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/entity-swift.struct\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/entity-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpunknownsearchitem\/entity-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpunknownsearchitem\/entity-swift.struct","title":"ExpoFpUnknownSearchItem.Entity","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/entity-swift.property","title":"let entity: Entity","type":"property"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/externalid","title":"let externalId: String?","type":"property"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpunknownsearchitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpunknownsearchitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpunknownsearchitem","title":"ExpoFpUnknownSearchItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpvisitedclickevent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpvisitedclickevent\/externalid","title":"let externalId: String","type":"property"},{"path":"\/documentation\/expofp\/expofpvisitedclickevent\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/expofp\/expofpvisitedclickevent\/visited","title":"let visited: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpvisitedclickevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpvisitedclickevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpvisitedclickevent","title":"ExpoFpVisitedClickEvent","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdownloadedplaninforesult","title":"ExpoFpDownloadedPlanInfoResult","type":"typealias"},{"path":"\/documentation\/expofp\/expofpplanstatuspublisher","title":"ExpoFpPlanStatusPublisher","type":"typealias"},{"path":"\/documentation\/expofp\/expofpresult","title":"ExpoFpResult","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetailstype\/booth","title":"case booth","type":"case"},{"path":"\/documentation\/expofp\/expofpdetailstype\/category","title":"case category","type":"case"},{"path":"\/documentation\/expofp\/expofpdetailstype\/exhibitor","title":"case exhibitor","type":"case"},{"path":"\/documentation\/expofp\/expofpdetailstype\/route","title":"case route","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetailstype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetailstype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpdetailstype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetailstype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetailstype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpdetailstype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/expofp\/expofpdetailstype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/expofp\/expofpdetailstype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpdetailstype","title":"ExpoFpDetailsType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofperror\/decodingerror(error:message:)","title":"case decodingError(error: Error?, message: String?)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/downloadingplanerror(error:)","title":"case downloadingPlanError(error: Error)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/internalerror(error:message:)","title":"case internalError(error: Error?, message: String?)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/invalidexpokey","title":"case invalidExpoKey","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/invalidplanlink(_:)","title":"case invalidPlanLink(ExpoFpLinkType)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/invalidzipfilepath(_:)","title":"case invalidZipFilePath(String)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/javascriptevaluationerror(_:)","title":"case javaScriptEvaluationError(Error)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/locationprovidererror(error:message:)","title":"case locationProviderError(error: Error?, message: String?)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/plandidterminate","title":"case planDidTerminate","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/planinforequesttimeout","title":"case planInfoRequestTimeout","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/planloadingerror(message:)","title":"case planLoadingError(message: String)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/planmessageerror(_:)","title":"case planMessageError(Error?)","type":"case"},{"path":"\/documentation\/expofp\/expofperror\/plannavigationerror(_:)","title":"case planNavigationError(Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/expofp\/expofperror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofperror","title":"ExpoFpError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpfloor\/index(_:)","title":"case index(Int)","type":"case"},{"path":"\/documentation\/expofp\/expofpfloor\/name(_:)","title":"case name(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpfloor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpfloor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpfloor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpfloor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpfloor","title":"ExpoFpFloor","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofplinktype\/==(_:_:)","title":"static func == (ExpoFpLinkType, ExpoFpLinkType) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofplinktype\/downloadedplaninfo(_:)","title":"case downloadedPlanInfo(ExpoFpDownloadedPlanInfo)","type":"case"},{"path":"\/documentation\/expofp\/expofplinktype\/expokey(_:)","title":"case expoKey(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofplinktype\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofplinktype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofplinktype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofplinktype","title":"ExpoFpLinkType","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplan\/downloader","title":"static let downloader: ExpoFpPlanDownloader","type":"property"},{"path":"\/documentation\/expofp\/expofpplan\/globallocationprovider","title":"static let globalLocationProvider: ExpoFpGlobalLocationProvider","type":"property"},{"path":"\/documentation\/expofp\/expofpplan\/preloader","title":"static let preloader: ExpoFpPlanPreloader","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplan\/createplanpresenter(with:additionalparams:locationprovider:messagelistener:)","title":"static func createPlanPresenter(with: ExpoFpLinkType, additionalParams: [URLQueryItem], locationProvider: IExpoFpLocationProvider?, messageListener: IExpoFpPlanMessageListener?) -> any IExpoFpPlanPresenter","type":"method"}],"path":"\/documentation\/expofp\/expofpplan","title":"ExpoFpPlan","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplanstatus\/error(_:)","title":"case error(ExpoFpError)","type":"case"},{"path":"\/documentation\/expofp\/expofpplanstatus\/initialization","title":"case initialization","type":"case"},{"path":"\/documentation\/expofp\/expofpplanstatus\/loading(percentage:)","title":"case loading(percentage: Int)","type":"case"},{"path":"\/documentation\/expofp\/expofpplanstatus\/ready","title":"case ready","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplanstatus\/iserror","title":"var isError: Bool","type":"property"},{"path":"\/documentation\/expofp\/expofpplanstatus\/isinitializing","title":"var isInitializing: Bool","type":"property"},{"path":"\/documentation\/expofp\/expofpplanstatus\/isready","title":"var isReady: Bool","type":"property"},{"path":"\/documentation\/expofp\/expofpplanstatus\/percentageprogress","title":"var percentageProgress: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplanstatus\/isloading(with:)","title":"func isLoading(with: Int?) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplanstatus\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/expofp\/expofpplanstatus\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpplanstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/expofp\/expofpplanstatus\/==(_:_:)","title":"static func == (ExpoFpPlanStatus, ExpoFpPlanStatus) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpplanstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpplanstatus","title":"ExpoFpPlanStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofproutewaypoint\/booth(_:)","title":"case booth(String)","type":"case"},{"path":"\/documentation\/expofp\/expofproutewaypoint\/currentposition(_:)","title":"case currentPosition(ExpoFpPosition)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofproutewaypoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofproutewaypoint\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofproutewaypoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofproutewaypoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofproutewaypoint","title":"ExpoFpRouteWaypoint","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/booth(_:)","title":"case booth(ExpoFpBooth)","type":"case"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/category(_:)","title":"case category(ExpoFpCategory)","type":"case"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/exhibitor(_:)","title":"case exhibitor(ExpoFpExhibitor)","type":"case"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/schedule(_:)","title":"case schedule(ExpoFpSchedule)","type":"case"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/unknown(_:)","title":"case unknown(ExpoFpUnknownSearchItem)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/booth","title":"case booth","type":"case"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/category","title":"case category","type":"case"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/exhibitor","title":"case exhibitor","type":"case"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/schedule","title":"case schedule","type":"case"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpsearchitemtype\/rawtype","title":"ExpoFpSearchItemType.RawType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/expofp\/expofpsearchitemtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/expofp\/expofpsearchitemtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/expofp\/expofpsearchitemtype","title":"ExpoFpSearchItemType","type":"enum"}],"path":"\/documentation\/expofp","title":"ExpoFP","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}